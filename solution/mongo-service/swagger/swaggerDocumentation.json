{
    "openapi": "3.0.0",
    "info": {
        "title": "Mongo Service API",
        "version": "1.0.0",
        "description": "API documentation for the Mongo Service."
    },
    "servers": [
        {
            "url": "http://localhost:3001",
            "description": "Local server"
        }
    ],
    "paths": {
        "/api/post/content/{creatorPersonId}": {
            "get": {
                "summary": "Retrieve contents by CreatorPersonId",
                "description": "Retrieve posts and comments created by a specific CreatorPersonId.",
                "parameters": [
                    {
                        "name": "creatorPersonId",
                        "in": "path",
                        "required": true,
                        "description": "ID of the creator person",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of contants containing all information including the forum title for the specified creator and the parent post if it's a comment.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Content"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No posts found for this creator ID."
                    },
                    "500": {
                        "description": "Error retrieving posts by creator ID."
                    }
                }
            }
        },
        "/api/post/creator/{id}/date/{year}": {
            "get": {
                "summary": "Retrieve posts by creator and date",
                "description": "Retrieves the last post for a specific creator checking if it was created after January 1 of the specified year.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The creator's unique identifier (CreatorPersonId)",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "required": true,
                        "description": "The year (as a string) used to define the threshold date (January 1 of this year)",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The last post by the specified creator, including the associated forum title.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Post"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No posts found for this creator ID after the specified date."
                    },
                    "500": {
                        "description": "Error retrieving posts by creator ID and date."
                    }
                }
            }
        },
        "/api/comment/replyTime": {
            "post": {
                "summary": "Calculate reply times for comments",
                "description": "Receives an array of comment replies and calculates the time difference in seconds between each reply and its original content.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "comments": {
                                        "type": "array",
                                        "description": "Array of comment reply objects containing replyId, originalId, and originalType.",
                                        "items": {
                                            "$ref": "#/components/schemas/CommentReplyInfo"
                                        },
                                        "example": [
                                            {
                                                "replyId": 1168231106633,
                                                "originalId": 1168231106628,
                                                "originalType": "Comment"
                                            },
                                            {
                                                "replyId": 1168231106700,
                                                "originalId": 1168231106600,
                                                "originalType": "Post"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "comments"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reply times calculated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "replyTime": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 142.7,
                                            "description": "Average time in seconds between replies and their original contents."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input format"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/person/{id}": {
            "get": {
                "summary": "Retrieve a person by its ID",
                "description": "Retrieve a single person by its ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "ID of the person to retrieve",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Person retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonName"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Person not found"
                    },
                    "500": {
                        "description": "Error retrieving person"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CommentReplyInfo": {
                "type": "object",
                "description": "Details of a comment reply referencing an original content entity.",
                "properties": {
                    "replyId": {
                        "type": "integer",
                        "description": "Unique identifier of the reply comment.",
                        "example": 1168231106633
                    },
                    "originalId": {
                        "type": "integer",
                        "description": "Unique identifier of the original content being replied to.",
                        "example": 1168231106628
                    },
                    "originalType": {
                        "type": "string",
                        "description": "Type of the original content, such as 'Comment' or 'Post'.",
                        "example": "Comment"
                    }
                },
                "required": [
                    "replyId",
                    "originalId",
                    "originalType"
                ]
            },
            "Post": {
                "type": "object",
                "description": "A user-generated post within a forum.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique identifier for the post.",
                        "example": 1
                    },
                    "creationDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the post was created.",
                        "example": "2012-10-01T12:00:00Z"
                    },
                    "creatorPersonId": {
                        "type": "integer",
                        "description": "Identifier of the person who created the post.",
                        "example": 14
                    },
                    "imageFile": {
                        "type": "string",
                        "description": "Optional image file attached to the post.",
                        "example": "photo962072674326.jpg"
                    },
                    "browserUsed": {
                        "type": "string",
                        "description": "Browser used to create the post.",
                        "example": "Firefox"
                    },
                    "length": {
                        "type": "integer",
                        "description": "Length of the post content in characters.",
                        "example": 0
                    },
                    "forumId": {
                        "type": "integer",
                        "description": "Identifier of the forum containing this post.",
                        "example": 0
                    },
                    "countryId": {
                        "type": "integer",
                        "description": "Identifier of the country where the post was made.",
                        "example": 81
                    },
                    "language": {
                        "type": "string",
                        "description": "Language of the post content.",
                        "example": "fa"
                    },
                    "content": {
                        "type": "string",
                        "description": "Textual content of the post.",
                        "example": "This is a sample post content."
                    }
                }
            },
            "Content": {
                "type": "object",
                "description": "A content posted by a user.",
                "required": [
                    "id",
                    "creationDate",
                    "type"
                ],
                "properties": {
                    "creationDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the contant was created.",
                        "example": "2012-10-01T12:00:00Z"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Unique identifier.",
                        "example": 1
                    },
                    "ContainerForumId": {
                        "type": "number",
                        "description": "The identifier of the forum where the content was posted.",
                        "example": 0
                    },
                    "forumTitle": {
                        "type": "string",
                        "description": "The title of the forum where the content was posted.",
                        "example": "General Discussion"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of content",
                        "example": 4
                    }
                },
                "content": {
                    "type": "string",
                    "description": "Textual content of the comment.",
                    "example": "This is a sample comment content."
                }
            },
            "PersonName": {
                "type": "object",
                "description": "Basic name information of a person.",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Hossein"
                    },
                    "surname": {
                        "type": "string",
                        "example": "Forouhar"
                    }
                }
            }
        }
    }
}